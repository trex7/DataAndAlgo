Python Notes:


ErrorS:
1. 198
2. 704

q that made me think:
- 496
- 152
- 1567
- 67
- 13
- 338
- 14
- 2290 - really good
- 1588 think of combination solution.
- 


1. to cache
from functools import lru_cache
@lru_cache(maxsize=None)


2. Go over values in key value pair of dict 
mp = {}

for u,v in mp.items():
    u refers to key and v refers to value


3. how to check if there is something there in a map item or not.

mp[i] = mp.get(i,0)+1


4. max size in python:
sys.maxsize
float('inf')

5. you cna convert number directly to binary
bin(n).count('1') --> this will give the number of 1s in the binary representation of a number

C++ Notes:
